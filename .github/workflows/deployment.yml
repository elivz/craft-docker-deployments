name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      domain:
        required: true
        type: string
      basic-auth:
        type: string
      health-check-path:
        type: string
        default: '/actions/app/health-check'
        description: 'Health check endpoint path'

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_REPOSITORY: ${{ github.repository }}/web

jobs:
  # Job 1: Build and push Docker images
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.DEPLOY_HOST }}" ] || [ -z "${{ secrets.DEPLOY_USER }}" ] || [ -z "${{ secrets.DEPLOY_KEY }}" ]; then
            echo "Error: Missing required deployment secrets (DEPLOY_HOST, DEPLOY_USER, DEPLOY_KEY)"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env file
        run: touch .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push images
        id: build
        uses: docker/bake-action@v6
        with:
          files: docker-compose.ci.yml
          push: true
          set: |
            *.cache-from=type=registry,ref=${{ env.GHCR_REGISTRY }}/${{ env.GHCR_REPOSITORY }}:latest
            *.cache-from=type=gha,scope=cached-stage
            *.cache-to=type=gha,scope=cached-stage,mode=max
        env:
          BRANCH: ${{ inputs.environment }}

  # Job 2: Deploy containers and verify health
  deploy-and-verify:
    name: Deploy and Verify
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.environment }}
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Docker configuration
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "docker-compose.deployment.yml"
          TARGET: "${{ inputs.environment }}/docker-compose.yml"

      - name: Deploy changes
        id: deploy
        uses: appleboy/ssh-action@v1
        continue-on-error: true
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 7m
          script_path: .github/workflows/scripts/deploy.sh
          envs: ENVIRONMENT,DOMAIN,GHCR_REGISTRY,GHCR_REPOSITORY,GITHUB_TOKEN,GITHUB_ACTOR
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          DOMAIN: ${{ inputs.domain }}
          GHCR_REGISTRY: ${{ env.GHCR_REGISTRY }}
          GHCR_REPOSITORY: ${{ env.GHCR_REPOSITORY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

      - name: Final Health Check
        id: final-health-check
        if: steps.deploy.outcome == 'success'
        uses: jtalk/url-health-check-action@v4
        with:
          url: https://${{ inputs.domain }}${{ inputs.health-check-path }}
          max-attempts: 6
          retry-delay: 5s
          basic-auth: ${{ inputs.basic-auth }}

      - name: Rollback on failure
        if: always() && (steps.deploy.outcome == 'failure' || steps.final-health-check.outcome == 'failure')
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 60s
          script_path: .github/workflows/scripts/rollback.sh
          envs: ENVIRONMENT
        env:
          ENVIRONMENT: ${{ inputs.environment }}

      - name: Mark deployment as failed
        if: steps.deploy.outcome == 'failure' || steps.final-health-check.outcome == 'failure'
        run: |
          echo "::error::Deployment failed and rollback was attempted"
          exit 1

  # Job 3: Run database migrations and clear caches
  migrate:
    name: Run Migrations
    runs-on: ubuntu-latest
    needs: deploy-and-verify
    environment: ${{ inputs.environment }}
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Craft migrations and clear caches
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 25m
          script_path: .github/workflows/scripts/migrate.sh
          envs: ENVIRONMENT
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          

  # Job 4: Clean up old images
  cleanup-images:
    name: Cleanup old images
    runs-on: ubuntu-latest
    needs: deploy-and-verify
    steps:
      - name: Remove old untagged images
        uses: actions/delete-package-versions@v5
        with:
          package-name: "${{ github.event.repository.name }}/web"
          package-type: 'container'
          min-versions-to-keep: 10
          ignore-versions: '^[a-zA-Z-]+$'
